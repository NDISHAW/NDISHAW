{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n  setTimeout: function (_setTimeout) {\n    function setTimeout(_x, _x2) {\n      return _setTimeout.apply(this, arguments);\n    }\n    setTimeout.toString = function () {\n      return _setTimeout.toString();\n    };\n    return setTimeout;\n  }(function (handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    var delegate = timeoutProvider.delegate;\n    if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n      return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n    }\n    return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n  }),\n  clearTimeout: function (_clearTimeout) {\n    function clearTimeout(_x3) {\n      return _clearTimeout.apply(this, arguments);\n    }\n    clearTimeout.toString = function () {\n      return _clearTimeout.toString();\n    };\n    return clearTimeout;\n  }(function (handle) {\n    var delegate = timeoutProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n  }),\n  delegate: undefined\n};","map":{"version":3,"names":["timeoutProvider","setTimeout","_setTimeout","_x","_x2","apply","arguments","toString","handler","timeout","args","_i","length","delegate","__spreadArray","__read","clearTimeout","_clearTimeout","_x3","handle","undefined"],"sources":["/home/ndishaw/Documents/coding/CODE/NDISHAW/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts"],"sourcesContent":["import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n"],"mappings":";AAeA,OAAO,IAAMA,eAAe,GAAoB;EAG9CC,UAAU,YAAAC,WAAA;IAAA,SAAAD,WAAAE,EAAA,EAAAC,GAAA;MAAA,OAAAF,WAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;IAAAL,UAAA,CAAAM,QAAA;MAAA,OAAAL,WAAA,CAAAK,QAAA;IAAA;IAAA,OAAAN,UAAA;EAAA,EAAV,UAAWO,OAAmB,EAAEC,OAAgB;IAAE,IAAAC,IAAA;SAAA,IAAAC,EAAA,IAAO,EAAPA,EAAA,GAAAL,SAAA,CAAAM,MAAO,EAAPD,EAAA,EAAO;MAAPD,IAAA,CAAAC,EAAA,QAAAL,SAAA,CAAAK,EAAA;;IACxC,IAAAE,QAAQ,GAAKb,eAAe,CAAAa,QAApB;IAChB,IAAIA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEZ,UAAU,EAAE;MACxB,OAAOY,QAAQ,CAACZ,UAAU,CAAAI,KAAA,CAAnBQ,QAAQ,EAAAC,aAAA,EAAYN,OAAO,EAAEC,OAAO,GAAAM,MAAA,CAAKL,IAAI;;IAEtD,OAAOT,UAAU,CAAAI,KAAA,SAAAS,aAAA,EAACN,OAAO,EAAEC,OAAO,GAAAM,MAAA,CAAKL,IAAI;EAC7C,CAAC;EACDM,YAAY,YAAAC,aAAA;IAAA,SAAAD,aAAAE,GAAA;MAAA,OAAAD,aAAA,CAAAZ,KAAA,OAAAC,SAAA;IAAA;IAAAU,YAAA,CAAAT,QAAA;MAAA,OAAAU,aAAA,CAAAV,QAAA;IAAA;IAAA,OAAAS,YAAA;EAAA,EAAZ,UAAaG,MAAM;IACT,IAAAN,QAAQ,GAAKb,eAAe,CAAAa,QAApB;IAChB,OAAO,CAAC,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,YAAY,KAAIA,YAAY,EAAEG,MAAa,CAAC;EAChE,CAAC;EACDN,QAAQ,EAAEO;CACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}