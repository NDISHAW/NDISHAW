{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nexport var intervalProvider = {\n  setInterval: function (_setInterval) {\n    function setInterval(_x, _x2) {\n      return _setInterval.apply(this, arguments);\n    }\n    setInterval.toString = function () {\n      return _setInterval.toString();\n    };\n    return setInterval;\n  }(function (handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    var delegate = intervalProvider.delegate;\n    if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n      return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n    }\n    return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n  }),\n  clearInterval: function (_clearInterval) {\n    function clearInterval(_x3) {\n      return _clearInterval.apply(this, arguments);\n    }\n    clearInterval.toString = function () {\n      return _clearInterval.toString();\n    };\n    return clearInterval;\n  }(function (handle) {\n    var delegate = intervalProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n  }),\n  delegate: undefined\n};","map":{"version":3,"names":["intervalProvider","setInterval","_setInterval","_x","_x2","apply","arguments","toString","handler","timeout","args","_i","length","delegate","__spreadArray","__read","clearInterval","_clearInterval","_x3","handle","undefined"],"sources":["/home/ndishaw/Documents/coding/CODE/NDISHAW/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts"],"sourcesContent":["import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n"],"mappings":";AAeA,OAAO,IAAMA,gBAAgB,GAAqB;EAGhDC,WAAW,YAAAC,YAAA;IAAA,SAAAD,YAAAE,EAAA,EAAAC,GAAA;MAAA,OAAAF,YAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;IAAAL,WAAA,CAAAM,QAAA;MAAA,OAAAL,YAAA,CAAAK,QAAA;IAAA;IAAA,OAAAN,WAAA;EAAA,EAAX,UAAYO,OAAmB,EAAEC,OAAgB;IAAE,IAAAC,IAAA;SAAA,IAAAC,EAAA,IAAO,EAAPA,EAAA,GAAAL,SAAA,CAAAM,MAAO,EAAPD,EAAA,EAAO;MAAPD,IAAA,CAAAC,EAAA,QAAAL,SAAA,CAAAK,EAAA;;IACzC,IAAAE,QAAQ,GAAKb,gBAAgB,CAAAa,QAArB;IAChB,IAAIA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEZ,WAAW,EAAE;MACzB,OAAOY,QAAQ,CAACZ,WAAW,CAAAI,KAAA,CAApBQ,QAAQ,EAAAC,aAAA,EAAaN,OAAO,EAAEC,OAAO,GAAAM,MAAA,CAAKL,IAAI;;IAEvD,OAAOT,WAAW,CAAAI,KAAA,SAAAS,aAAA,EAACN,OAAO,EAAEC,OAAO,GAAAM,MAAA,CAAKL,IAAI;EAC9C,CAAC;EACDM,aAAa,YAAAC,cAAA;IAAA,SAAAD,cAAAE,GAAA;MAAA,OAAAD,cAAA,CAAAZ,KAAA,OAAAC,SAAA;IAAA;IAAAU,aAAA,CAAAT,QAAA;MAAA,OAAAU,cAAA,CAAAV,QAAA;IAAA;IAAA,OAAAS,aAAA;EAAA,EAAb,UAAcG,MAAM;IACV,IAAAN,QAAQ,GAAKb,gBAAgB,CAAAa,QAArB;IAChB,OAAO,CAAC,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,aAAa,KAAIA,aAAa,EAAEG,MAAa,CAAC;EAClE,CAAC;EACDN,QAAQ,EAAEO;CACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}